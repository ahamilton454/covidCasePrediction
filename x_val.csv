
    pca = PCA(n_components=3)

    principalComponents = pca.fit_transform(deep_interpolate_data(x_train).values)

    print("PCA Variance Ratio: {}".format(pca.explained_variance_ratio_))
    xdf = pd.DataFrame(principalComponents, columns=["principal component 1", "principal component 2", "principal component 3"])
    xdf = xdf.fillna(xdf.mean())
    ydf = pd.DataFrame(y_train, columns=['cases'])
    finalDf = pd.concat([xdf, ydf], axis=1)

    fig = plt.figure(figsize=(10, 10))
    ax = fig.add_subplot(projection='3d')
    ax.set_title('3 component PCA', fontsize=20)
    cmap = plt.cm.rainbow
    norm = matplotlib.colors.Normalize(vmin=0, vmax=15)
    ax.scatter(finalDf.loc[:, 'principal component 1'],
               finalDf.loc[:, 'principal component 2'],
               finalDf.loc[:, 'principal component 3'],
               c=cmap(norm(finalDf.loc[:, "cases"])))

    sm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)
    fig.colorbar(sm)
    ax.grid()


    plt.show()
